// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using bangun.Data;

#nullable disable

namespace bangun.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607141903_TambahKolomSatuanDiProduct")]
    partial class TambahKolomSatuanDiProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bangun.Models.Product", b =>
                {
                    b.Property<int>("Id_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_product");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Product"));

                    b.Property<int>("Harga")
                        .HasColumnType("integer")
                        .HasColumnName("harga");

                    b.Property<string>("Nama_Product")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nama_product");

                    b.Property<string>("Satuan")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("satuan");

                    b.HasKey("Id_Product");

                    b.ToTable("product");
                });

            modelBuilder.Entity("bangun.Models.Proyek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_proyek");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSelesai")
                        .HasColumnType("boolean")
                        .HasColumnName("is_selesai");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nama");

                    b.HasKey("Id");

                    b.ToTable("proyek");
                });

            modelBuilder.Entity("bangun.Models.ProyekProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Jumlah")
                        .HasColumnType("integer")
                        .HasColumnName("jumlah");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("product_id");

                    b.Property<int>("ProyekId")
                        .HasColumnType("integer")
                        .HasColumnName("proyek_id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProyekId");

                    b.ToTable("proyekproduct");
                });

            modelBuilder.Entity("bangun.Models.Toko", b =>
                {
                    b.Property<int>("IdToko")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_toko");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdToko"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("NamaToko")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nama_toko");

                    b.HasKey("IdToko");

                    b.ToTable("toko");
                });

            modelBuilder.Entity("bangun.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_person");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .HasColumnType("text")
                        .HasColumnName("nama");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("person");
                });

            modelBuilder.Entity("bangun.Models.ProyekProduct", b =>
                {
                    b.HasOne("bangun.Models.Product", "Product")
                        .WithMany("ProyekProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bangun.Models.Proyek", "Proyek")
                        .WithMany("ProyekProducts")
                        .HasForeignKey("ProyekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Proyek");
                });

            modelBuilder.Entity("bangun.Models.Product", b =>
                {
                    b.Navigation("ProyekProducts");
                });

            modelBuilder.Entity("bangun.Models.Proyek", b =>
                {
                    b.Navigation("ProyekProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
