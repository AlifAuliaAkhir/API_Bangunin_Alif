{
  "openapi": "3.0.1",
  "info": {
    "title": "API",
    "version": "v1"
  },
  "paths": {
    "/api/Auth": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/ganti-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/ganti-password-user": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GantiPasswordUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GantiPasswordUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GantiPasswordUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/{id}": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Proyek": {
      "get": {
        "tags": [
          "Proyek"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Proyek"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyekCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyekCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProyekCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Proyek/{id}": {
      "put": {
        "tags": [
          "Proyek"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyekUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProyekUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProyekUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Proyek"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Proyek/{id}/pdf": {
      "get": {
        "tags": [
          "Proyek"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Proyek/selesai": {
      "get": {
        "tags": [
          "Proyek"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Proyek/belum-selesai": {
      "get": {
        "tags": [
          "Proyek"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProyekReadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Proyek/{id}/add-product": {
      "post": {
        "tags": [
          "Proyek"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductToProyekDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductToProyekDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductToProyekDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Toko": {
      "get": {
        "tags": [
          "Toko"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Toko"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Toko"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Toko"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Toko"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Toko"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Toko"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Toko"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Toko"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Toko"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Toko"
                }
              }
            }
          }
        }
      }
    },
    "/api/Toko/{id}": {
      "get": {
        "tags": [
          "Toko"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Toko"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Toko"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Toko"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Toko"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Toko"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Toko"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Toko"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Toko"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddProductToProyekDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "jumlah": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "nama_Product": {
            "type": "string",
            "nullable": true
          },
          "harga": {
            "type": "integer",
            "format": "int32"
          },
          "satuanBarang": {
            "$ref": "#/components/schemas/SatuanEnum"
          }
        },
        "additionalProperties": false
      },
      "GantiPasswordUser": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "nullable": true
          },
          "passwordLama": {
            "type": "string",
            "nullable": true
          },
          "passwordBaru": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Login": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "required": [
          "harga",
          "nama_Product",
          "satuanBarang"
        ],
        "type": "object",
        "properties": {
          "id_Product": {
            "type": "integer",
            "format": "int32"
          },
          "nama_Product": {
            "minLength": 1,
            "type": "string"
          },
          "harga": {
            "type": "integer",
            "format": "int32"
          },
          "satuanBarang": {
            "minLength": 1,
            "type": "string"
          },
          "proyekProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProyekProduct"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Proyek": {
        "required": [
          "isSelesai",
          "nama"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nama": {
            "minLength": 1,
            "type": "string"
          },
          "isSelesai": {
            "type": "boolean"
          },
          "proyekProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProyekProduct"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProyekCreateDto": {
        "type": "object",
        "properties": {
          "nama": {
            "type": "string",
            "nullable": true
          },
          "isSelesai": {
            "type": "boolean"
          },
          "proyekProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProyekCreateProductDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProyekCreateProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "jumlah": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProyekProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "proyekId": {
            "type": "integer",
            "format": "int32"
          },
          "proyek": {
            "$ref": "#/components/schemas/Proyek"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "jumlah": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProyekProductDetailDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "namaProduk": {
            "type": "string",
            "nullable": true
          },
          "harga": {
            "type": "integer",
            "format": "int32"
          },
          "jumlah": {
            "type": "integer",
            "format": "int32"
          },
          "satuanBarang": {
            "$ref": "#/components/schemas/SatuanEnum"
          }
        },
        "additionalProperties": false
      },
      "ProyekReadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nama": {
            "type": "string",
            "nullable": true
          },
          "isSelesai": {
            "type": "boolean"
          },
          "proyekProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProyekProductDetailDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProyekUpdateDto": {
        "type": "object",
        "properties": {
          "isSelesai": {
            "type": "boolean"
          },
          "proyekProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProyekCreateProductDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SatuanEnum": {
        "enum": [
          "Kg",
          "Pack",
          "Liter",
          "Meter",
          "Pcs"
        ],
        "type": "string"
      },
      "Toko": {
        "required": [
          "latitude",
          "longitude",
          "namaToko"
        ],
        "type": "object",
        "properties": {
          "idToko": {
            "type": "integer",
            "format": "int32"
          },
          "namaToko": {
            "minLength": 1,
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nama": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          "User",
          "Admin"
        ],
        "type": "string"
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Masukkan token JWT di bawah ini. Contoh: Bearer <token>",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}